<%= form_with(model: [form, field.becomes(Document::Field)], scope: :field, local: true) do |f| %>

  <%= display_error_validations field %>

  <fieldset>
    <div class="mb-3">
      <%= f.label :name, class: "form-label", for: "form-name" %>
      <%= f.text_field :name, class: "form-control", placeholder: "Name", id: "form-name" %>
      <div class="form-text">
        The identifier of the field, the value must follow the pattern <code><%= Document::Field::NAME_REGEX.source %></code> and Ruby's variable naming rule.
      </div>
    </div>
    <div class="mb-3">
      <%= f.label :label, class: "form-label" %>
      <%= f.text_field :label, class: "form-control", placeholder: "Label"%>
    </div>
    <div class="mb-3">
      <%= f.label :hint, class: "form-label" %>
      <%= f.text_field :hint, class: "form-control", placeholder: "Hint"%>
    </div>
    <div class="mb-3">
      <%= f.label :type, class: "form-label" %>
      <%= f.select :type, options_for_field_types(selected: field.class.to_s), {}, class: "form-control" %>
    </div>
    <div class="mb-1">
      <%= f.label :accessibility, class: "form-label" %>
    </div>
    <div class="mb-3">
      <% Document::Field.accessibilities.each do |k, _| %>
        <div class="form-check form-check-inline">
          <%= f.radio_button :accessibility, k, class: "form-check-input", id: k %>
          <%= label_tag(k, Document::Field.human_enum_value(:accessibility, k)) %>
        </div>
      <% end %>
    </div>
    <div class="mb-3">
      <%= f.label :description, class: "form-label", for: "form-description" %>
      <%= f.text_area :description, class: "form-control", placeholder: "Description", id: "form-description" %>
    </div>

    <hr />
    <div class="mt-4">
      <%= f.submit class: "btn btn-primary" %>
    </div>
  </fieldset>


<% end %>